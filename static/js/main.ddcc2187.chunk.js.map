{"version":3,"sources":["components/Pieces.js","components/data.js","components/Card.js","components/Parallex.js","components/Currency_Card.js","App.js","index.js"],"names":["Pieces","meta_data","useEffect","tag","document","getElementsByClassName","Array","from","forEach","element","index","VanillaTilt","init","max","speed","perspective","console","log","className","about_blockchain","block_number","Card","querySelector","map","item","Parallex","id","alt","src","Currency_Card","useState","currency_pairs","setcurrency","currency1","setcurrency1","currency2","setcurrency2","new_array","currency1_function","e","target","value","calculate","currency2_function","a","rateEl","getElementById","axios","get","data","rate","rates","innerText","amountEl_two","amountEl_one","toFixed","then","Object","entries","key","push","length","onClick","onChange","placeholder","App","layer0","layer1","layer2","layer3","layer4","layer5","layer6","window","addEventListener","scrollY","style","top","body","i","drop","createElement","size","Math","random","posx","floor","innerWidth","delay","duration","width","left","animationDelay","animationDuration","appendChild","rain_function","ReactDOM","render"],"mappings":"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","file":"static/js/main.ddcc2187.chunk.js","sourcesContent":["import \"../styles.scss\";\nimport {useEffect} from \"react\"\nimport VanillaTilt from 'vanilla-tilt';\n  \nexport default function Pieces({ meta_data }) {\n  useEffect(()=>{\n    const tag=document.getElementsByClassName(\"each_piece\");\n    Array.from(tag).forEach( function(element, index) {\n      VanillaTilt.init(tag[index],{\n        max:2,\n        speed:200,\n        perspective :300\n      })\n    });\n    console.log(tag)\n  },[])\n  return <div className=\"each_piece\">{meta_data}</div>;\n}\n","export const about_blockchain = [\n  {\n    block_number: 1,\n    meta_data:\n      \"A blockchain is a distributed database that is shared among the nodes of a computer network. As a database, a blockchain stores information electronically in digital format. Blockchains are best known for their crucial role in cryptocurrency systems, such as Bitcoin, for maintaining a secure and decentralized record of transactions.\"\n  },\n  {\n    block_number: 2,\n    meta_data:\n      \"One key difference between a typical database and a blockchain is how the data is structured. A blockchain collects information together in groups, known as blocks, that hold sets of information. Blocks have certain storage capacities and, when filled, are closed and linked to the previously filled block, forming a chain of data known as the blockchain.\"\n  },\n  {\n    block_number: 3,\n    meta_data:\n      \"A database usually structures its data into tables, whereas a blockchain, like its name implies, structures its data into chunks (blocks) that are strung together. This data structure inherently makes an irreversible time line of data when implemented in a decentralized nature. When a block is filled, it is set in stone and becomes a part of this time line.\"\n  },\n  {\n    block_number: 4,\n    meta_data:\n      \"Decentralized blockchains are immutable, which means that the data entered is irreversible. For Bitcoin, this means that transactions are permanently recorded and viewable to anyone.\"\n  }\n];\nexport const how_does_it_work = [\n  {\n    block_number: 1,\n    meta_data:\n      \"The goal of blockchain is to allow digital information to be recorded and distributed, but not edited. In this way, a blockchain is the foundation for immutable ledgers, or records of transactions that cannot be altered, deleted, or destroyed. This is why blockchains are also known as a distributed ledger technology (DLT). \"\n  },\n  {\n    block_number: 2,\n    meta_data:\n      \"First proposed as a research project in 1991, the blockchain concept predated its first widespread application in use: Bitcoin, in 2009. In the years since, the use of blockchains has exploded via the creation of various cryptocurrencies, decentralized finance (DeFi) applications, non-fungible tokens (NFTs), and smart contracts.\"\n  },\n  {\n    block_number: 3,\n    meta_data:\n      \"What a blockchain does is to allow the data held in that database to be spread out among several network nodes at various locations. This not only creates redundancy but also maintains the fidelity of the data stored therein—if somebody tries to alter a record at one instance of the database, the other nodes would not be altered and thus would prevent a bad actor from doing so. If one user tampers with Bitcoin’s record of transactions, all other nodes would cross-reference each other and easily pinpoint the node with the incorrect information. \"\n  },\n  {\n    block_number: 4,\n    meta_data:\n      \"Because of the decentralized nature of Bitcoin’s blockchain, all transactions can be transparently viewed by either having a personal node or using blockchain explorers that allow anyone to see transactions occurring live. Each node has its own copy of the chain that gets updated as fresh blocks are confirmed and added. This means that if you wanted to, you could track Bitcoin wherever it goes.  \"\n  }\n];\n","import \"../styles.scss\";\nimport Pieces from \"./Pieces.js\";\nimport { about_blockchain } from \"./data.js\";\nimport VanillaTilt from 'vanilla-tilt';\nimport {useEffect} from \"react\"\nexport default function Card() {\n  useEffect(()=>{\n    VanillaTilt.init(document.querySelector(\".each_piece\"),{\n      max:25,\n      speed:400\n    })\n  },[])\n  \n  return (\n   \n      <div className=\"outer_box\">\n        <div className=\"intro_to_topic\">WHAT IS BLOCKCHAIN ?</div>\n        <div className=\"Card-box\">\n          {about_blockchain.map((item) => {\n            return <Pieces meta_data={item.meta_data} />;\n          })}\n        </div>\n      </div>\n    \n  );\n}\n","import \"../styles.scss\";\nimport Card from \"./Card\";\nexport default function Parallex() {\n  return (\n    <div className=\"parallax\">\n      <div id=\"parallax__layer__0\" className=\"parallax__layer \">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_0.png?raw=true\"\n        />\n      </div>\n      <div className=\"parallax__layer parallax__layer__1\">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_1.png?raw=true\"\n        />\n      </div>\n      <div className=\"parallax__layer parallax__layer__2\">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_2.png?raw=true\"\n        />\n      </div>\n      <div className=\"parallax__layer parallax__layer__3\">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_3.png?raw=true\"\n        />\n      </div>\n      <div className=\"parallax__layer parallax__layer__4\">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_4.png?raw=true\"\n        />\n      </div>\n      <div className=\"parallax__layer parallax__layer__5\">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_5.png?raw=true\"\n        />\n      </div>\n      <div className=\"parallax__layer parallax__layer__6\">\n        <img\n          alt=\"\"\n          src=\"https://github.com/samdbeckham/blog/blob/master/dev/_assets/images/articles/firewatch/layer_6.png?raw=true\"\n        />\n      </div>\n      {/* <div className=\"parallax__cover\">asdasd</div> */}\n    </div>\n  );\n}\n","import {useEffect,useState} from \"react\"\nimport axios from \"axios\"\nexport default function Currency_Card(){\n\tconst [currency_pairs,setcurrency]=useState([])\n  const [currency1,setcurrency1]=useState(\"\")\n  const [currency2,setcurrency2]=useState(\"\")\n\tlet new_array=[...currency_pairs]\n  const currency1_function=(e)=>{\n      setcurrency1(e.target.value)\n      calculate()\n  }\n  const currency2_function=(e)=>{\n      setcurrency2(e.target.value)\n      calculate()\n  }\n  const calculate=async ()=>{\n    const rateEl = document.getElementById('rate');\n    const data=await axios.get(`https://api.exchangerate-api.com/v4/latest/${currency1}`)\n    const rate=data.data.rates[currency2]\n    rateEl.innerText = `1 ${currency1} = ${rate} ${currency2}`;\n    const amountEl_two = document.getElementById('amount-two');\n    const amountEl_one = document.getElementById('amount-one');\n    amountEl_two.value = (amountEl_one.value * rate).toFixed(4)\n  }\n  const swappy=()=>{\n    const currencyEl_one = document.getElementById('currency-one');\n    const currencyEl_two = document.getElementById('currency-two');\n    const temp = currencyEl_one.value;\n    currencyEl_one.value = currencyEl_two.value;\n    currencyEl_two.value = temp;\n    const temp1=currency2\n    setcurrency2(currency1)\n    setcurrency1(temp1)\n    calculate()\n  }\n\tuseEffect(()=>{\n\t\taxios.get(\"https://blockchain.info/ticker\")\n\t\t\t\t\t\t.then((data)=>{\n\t\t\t\t\t\t\t  for (const [key, value] of Object.entries(data.data)) {\n                  new_array.push(key);\n  \t\t\t\t\t\t\t\t\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t\tsetcurrency(new_array)\n\t\t\t\t\t\t})\n\t},[])\n\treturn( \n  <div className=\"container-outer\">\n  \t<div className=\"container\">\n        <div className=\"currency\">\n          <select id=\"currency-one\">\n            \n          \t{currency_pairs.length>0?\n          \t\tcurrency_pairs.map((item,index)=>{\n          \t\t\treturn <option onClick={currency1_function}>{item}</option>\n          \t\t})\n          \t\t:<option>\"error\"</option>}\n          </select>\n          <input onChange={calculate}  id=\"amount-one\" placeholder=\"0\"  />\n        </div>\n\n         <div className=\"swap-rate-container\">\n          \n          <div className=\"rate\" id=\"rate\"></div>\n        </div>\n\n        <div className=\"currency\">\n          <select id=\"currency-two\">\n            \n            {currency_pairs.length>0?\n              currency_pairs.map((item,index)=>{\n                return <option onClick={currency2_function}>{item}</option>\n              })\n              :<option>\"error\"</option>}\n          </select>\n          <input onChange={calculate}  id=\"amount-two\" placeholder=\"0\" />\n        </div>\n      </div>\n    </div>\n\t)\n}","import \"./styles.scss\";\nimport {useEffect} from \"react\"\nimport Parallex from \"./components/Parallex\";\nimport Card from \"./components/Card\";\nimport Currency_Card from \"./components/Currency_Card\"\nexport default function App() {\n    useEffect(()=>{\n      let text=document.getElementById(\"heading\")\n      let layer0=document.getElementById(\"parallax__layer__0\")\n      let layer1=document.querySelector(\".parallax__layer__1\")\n      let layer2=document.querySelector(\".parallax__layer__2\")\n      let layer3=document.querySelector(\".parallax__layer__3\")\n      let layer4=document.querySelector(\".parallax__layer__4\")\n      let layer5=document.querySelector(\".parallax__layer__5\")\n      let layer6=document.querySelector(\".parallax__layer__6\")\n      window.addEventListener(\"scroll\", (e) => {\n        let value=(window.scrollY);\n        \n        // text.style.top=value*0.08 + '%'\n        layer0.style.top = value*0.04+'%'\n        layer0.style.top = value*0.04+'%'\n        layer1.style.top = value*0.09+'%'\n        layer2.style.top = value*0.08+'%'\n        layer3.style.top= value*0.08+'%'\n        layer4.style.top = value*0.08+'%'\n        layer5.style.top= value*0.08+'%'\n        layer6.style.top = value*0.01+'%'\n      })\n      const rain_function=()=>{\n          let amount=60;\n          let body=document.querySelector(\".rain\")\n          let i=0\n          while(i<amount){\n            let drop=document.createElement('i')\n            let size=Math.random()*5\n            let posx=Math.floor(Math.random()*window.innerWidth)\n            let delay=Math.random*-20\n            let duration=Math.random()*5;\n            drop.style.width = 0.2+size+'px'\n            drop.style.left=posx+'px'\n            drop.style.animationDelay= delay+'s'\n            drop.style.animationDuration= duration+'s'\n            body.appendChild(drop)\n            i++;\n          }\n      }\n      rain_function()\n\n    },[])\n    \n  \n  return (\n    <div className=\"App\">\n      <div id=\"heading\">\n        <h2>BLOCKCHAIN</h2>\n        <h3>Welcome To The Future</h3>\n      </div>\n\n      <Parallex />\n      <div className=\"parallax__cover\">\n        <Card />\n      </div>\n      <div className=\"blockchain_outer\">\n        <div className=\"rain\">\n           <Currency_Card />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}